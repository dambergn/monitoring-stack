// config.alloy

logging {
	level  = "debug" // Set to "info" for less verbose logs once stable
	format = "logfmt"
}

// =================================================================
// METRICS CONFIGURATION
// =================================================================

// Alloy exposes its internal metrics on port 8080 by default.
prometheus.scrape "alloy_internal_metrics" {
  targets    = [{__address__ = "127.0.0.1:8080", __metrics_path__ = "/metrics"}]
  forward_to = [prometheus.remote_write.prometheus_prom_write.receiver]
}

// Configure a remote_write component to send metrics to Prometheus.
prometheus.remote_write "prometheus_prom_write" {
	endpoint {
		url = "http://prometheus:9090/api/v1/write"
	}
}

// Scrape Node Exporter for system metrics
prometheus.scrape "node_exporter_metrics" {
  targets    = [{__address__ = "node-exporter:9100"}]
  forward_to = [prometheus.remote_write.prometheus_prom_write.receiver]
}


// =================================================================
// LOGS CONFIGURATION
// =================================================================

// Define the destination for our logs
loki.write "default" {
	endpoint {
		url = "http://loki:3200/loki/api/v1/push"
	}
}

// STEP 1: Define a component to DISCOVER the log files on the host system.
// This component exports a list of targets.
discovery.file "system_log_files" {
  paths = ["/var/log/**/*.log"]
}

// STEP 2: Define the log source component and WIRE its 'targets' input
// to the output from the discovery component above.
loki.source.file "system_logs" {
  targets    = discovery.file.system_log_files.targets // <-- THIS IS THE CORRECT WIRING
  forward_to = [loki.write.default.receiver]
}

// (Optional but Recommended) Scrape logs from all other Docker containers.
// This component discovers and scrapes logs in one step.
loki.source.docker "container_logs" {
  host       = "unix:///var/run/docker.sock"
  forward_to = [loki.write.default.receiver]

  relabel_rules {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/(.*)"
    target_label  = "container"
  }
}