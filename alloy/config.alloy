// config.alloy

logging {
	level  = "debug" // Set to "info" for less verbose logs once stable
	format = "logfmt"
}

// =================================================================
// METRICS CONFIGURATION
// =================================================================

// Alloy exposes its internal metrics on port 8080 by default.
prometheus.scrape "alloy_internal_metrics" {
  targets    = [{__address__ = "127.0.0.1:8080", __metrics_path__ = "/metrics"}]
  forward_to = [prometheus.remote_write.prometheus_prom_write.receiver]
}

// Configure a remote_write component to send metrics to Prometheus.
prometheus.remote_write "prometheus_prom_write" {
	endpoint {
		url = "http://prometheus:9090/api/v1/write"
	}
}

// Scrape Node Exporter for system metrics
prometheus.scrape "node_exporter_metrics" {
  targets    = [{__address__ = "node-exporter:9100"}]
  forward_to = [prometheus.remote_write.prometheus_prom_write.receiver]
}


// =================================================================
// LOGS CONFIGURATION
// =================================================================

// Define the final destination for ALL logs on the correct port.
loki.write "default" {
	endpoint {
		url = "http://loki:3200/loki/api/v1/push" // <-- Using your specified port
	}
}


// --- Pipeline for HOST system logs ---

// STEP 1.1: Discover log files on the host using the correct `paths` attribute.
discovery.file "system_logs" {
  paths = ["/var/log/**/*.log"]
}

// STEP 1.2: Scrape the discovered files and forward them directly to Loki.
loki.source.file "host_files" {
  targets    = discovery.file.system_logs.targets
  forward_to = [loki.write.default.receiver]
}


// --- Pipeline for DOCKER container logs (Correct 3-stage pipeline) ---

// STEP 2.1: Discover all running Docker containers.
discovery.docker "all_containers" {
  host = "unix:///var/run/docker.sock"
}

// STEP 2.2: Scrape the logs from the discovered containers.
// This forwards the raw logs to the RELABEL component.
loki.source.docker "raw_docker_logs" {
  targets    = discovery.docker.all_containers.targets // <-- Correct wiring
  forward_to = [loki.relabel.docker_logs.receiver]     // <-- Forward to the relabeler
}

// STEP 2.3: Relabel the logs. THIS IS THE CORRECT METHOD.
// It takes logs from the source, adds the label, and sends them to the final destination.
loki.relabel "docker_logs" {
  forward_to = [loki.write.default.receiver] // Forward final logs to Loki

  // Define the relabeling rule.
  rule {
    source_labels = ["__meta_docker_container_name"]
    regex         = "/(.*)"
    target_label  = "container"
  }
}