// config.alloy

logging {
	level  = "debug" // Set to "info" for less verbose logs once stable
	format = "logfmt"
}

// =================================================================
// METRICS CONFIGURATION
// =================================================================

// Alloy exposes its internal metrics on port 8080 by default.
prometheus.scrape "alloy_internal_metrics" {
  targets    = [{__address__ = "127.0.0.1:8080", __metrics_path__ = "/metrics"}]
  forward_to = [prometheus.remote_write.prometheus_prom_write.receiver]
}

// Configure a remote_write component to send metrics to Prometheus.
prometheus.remote_write "prometheus_prom_write" {
	endpoint {
		url = "http://prometheus:9090/api/v1/write"
	}
}

// Scrape Node Exporter for system metrics
prometheus.scrape "node_exporter_metrics" {
  targets    = [{__address__ = "node-exporter:9100"}]
  forward_to = [prometheus.remote_write.prometheus_prom_write.receiver]
}


// =================================================================
// LOGS CONFIGURATION
// =================================================================

// Define the final destination for ALL logs.
// Using "default" as a label is a common and safe convention.
loki.write "default" {
	endpoint {
		url = "http://loki:3200/loki/api/v1/push"
	}
}

// Discover log files on the host system.
local.file_match "host_logs" {
     path_targets = [{"__path__" = "/var/log/*.log"}]
 }

// Scrape the discovered log files.
loki.source.file "from_host" {
  targets       = local.file_match.host_logs.targets
  forward_to    = [loki.process.filter.receiver] // Forward to the processing block
  tail_from_end = true
}

// Process the logs before they are sent to Loki.
loki.process "filter" {
  // CORRECTED SYNTAX: The 'stage.drop' block is now valid.
  // We removed the unnecessary 'source' attribute.
  stage.drop {
      expression          = ".*Connection closed by authenticating user root"
      drop_counter_reason = "noisy_root_connection"
  }

  // After processing, forward the logs to the final destination.
  forward_to = [loki.write.default.receiver]
}